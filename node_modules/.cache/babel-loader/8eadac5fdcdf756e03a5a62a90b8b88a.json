{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/Desktop/github/parkzeus/src/Components/Sidebar/SidebarMenuItem.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemText, Divider, Collapse } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport './Sidebar.scss'; // import dashboard from '../../pages/Dashboard/Background'\n// import Dashboard from '../../pages/Dashboard/Dashboard';\n\nexport default function SidebarMenuItem(props) {\n  const {\n    name,\n    Icon,\n    link,\n    items = []\n  } = props;\n  const classes = useStyles();\n  const isExpandable = items && items.length > 0;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  const MenuItemRoot = React.createElement(ListItem, {\n    className: classes.listItem,\n    divider: true,\n    button: true,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !!Icon && // <ListItemIcon >\n  //   <Icon />\n  // </ListItemIcon>\n  React.createElement(\"img\", {\n    className: \"sidebarIcon\",\n    src: Icon,\n    alt: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: link,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    className: classes.textSize,\n    primary: name,\n    inset: !Icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), isExpandable && !open && React.createElement(AddIcon, {\n    fontSize: 'small',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), isExpandable && open && React.createElement(RemoveIcon, {\n    fontSize: 'small',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n  const MenuItemChildren = isExpandable ? React.createElement(Collapse, {\n    in: open && props.close,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, items.map((item, index) => React.createElement(SidebarMenuItem, Object.assign({}, item, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))) : null;\n  return React.createElement(React.Fragment, null, MenuItemRoot, MenuItemChildren);\n}\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    paddingBottom: '17px',\n    paddingTop: '17px'\n  },\n  textSize: {\n    fontSize: '15px',\n    whiteSpace: 'normal'\n  }\n}));","map":{"version":3,"sources":["/home/praveesh/Desktop/github/parkzeus/src/Components/Sidebar/SidebarMenuItem.js"],"names":["React","Link","makeStyles","List","ListItem","ListItemText","Divider","Collapse","AddIcon","RemoveIcon","SidebarMenuItem","props","name","Icon","link","items","classes","useStyles","isExpandable","length","open","setOpen","useState","handleClick","MenuItemRoot","listItem","textDecoration","color","textSize","MenuItemChildren","close","map","item","index","theme","paddingBottom","paddingTop","fontSize","whiteSpace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {List, ListItem, ListItemText, Divider, Collapse} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport './Sidebar.scss'\n\n// import dashboard from '../../pages/Dashboard/Background'\n// import Dashboard from '../../pages/Dashboard/Dashboard';\n\nexport default function SidebarMenuItem(props) {\n\n    const { name, Icon, link, items = [] } = props\n    const classes = useStyles()\n    const isExpandable = items && items.length > 0\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(!open)\n      }\n    \n      const MenuItemRoot = (\n\n        <ListItem className={classes.listItem} divider={true} button onClick={handleClick} >\n          {/* Display an icon if any */}\n          {!!Icon && (\n            // <ListItemIcon >\n            //   <Icon />\n            // </ListItemIcon>\n            <img className=\"sidebarIcon\" src={Icon} alt=\"icon\" />\n            \n          )}\n          \n            <Link to={link} style={{ textDecoration: 'none', color: 'black' }}>\n              <ListItemText className={classes.textSize} primary={name} inset={!Icon} />\n            </Link>\n        \n            \n          {/* Display the expand menu if the item has children */}\n          {isExpandable && !open && <AddIcon fontSize={'small'}  />}\n          {isExpandable && open && <RemoveIcon fontSize={'small'} />}\n        </ListItem>\n\n\n      )\n    \n      const MenuItemChildren = isExpandable ? (\n        <Collapse in={open && props.close} timeout=\"auto\" unmountOnExit>\n          <Divider />\n          <List component=\"div\" disablePadding>\n            {items.map((item, index) => (\n              <SidebarMenuItem {...item} key={index} />\n            ))}\n          </List>\n        </Collapse>\n      ) : null\n    \n\n    return (\n\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n    )\n}\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    paddingBottom: '17px',\n    paddingTop: '17px'\n  },\n  textSize:{\n    fontSize: '15px',\n    whiteSpace: 'normal'\n  }\n}))"]},"metadata":{},"sourceType":"module"}