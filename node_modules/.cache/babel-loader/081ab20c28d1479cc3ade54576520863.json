{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/Desktop/github/parkzeus/src/Components/Charts/DateSlider/DateSlider.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Waypoint } from 'react-waypoint';\nimport \"./dateSlider.scss\";\nimport { addDays, addWeeks, format, getDate, isBefore, isSameDay, isAfter, subDays, subWeeks } from \"date-fns\";\nexport default function DatePicker(props) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [softSelect, setSoftSelect] = useState(new Date());\n  const [currentWeek, setCurrentWeek] = useState(new Date());\n  const [currentDate] = useState(new Date());\n  const {\n    endDate,\n    shouldScroll\n  } = props;\n  let {\n    selectDate\n  } = props;\n  let scroll = false;\n  shouldScroll === true ? scroll = true : scroll = false;\n  let maxValue;\n\n  if (scroll === false) {\n    maxValue = 7;\n  } else {\n    maxValue = endDate | 90;\n  }\n\n  const getStyles = day => {\n    const classes = [];\n\n    if (isSameDay(day, selectedDate)) {\n      classes.push('DateDayItem--selected');\n    }\n\n    if (isBefore(day, currentDate)) {\n      classes.push('DateDayItem--disabled');\n    }\n\n    if (isAfter(day, currentDate)) {\n      classes.push('DateDayItem--disabled');\n    }\n\n    return classes.join(' ');\n  };\n\n  const getId = day => {\n    if (isSameDay(day, selectedDate)) {\n      return 'selected';\n    } else {\n      return \"\";\n    }\n  };\n\n  const getScroll = () => {\n    if (scroll === true) {\n      return 'Datepicker--DateList--scrollable';\n    } else {\n      maxValue = 7;\n      return 'Datepicker--DateList';\n    }\n  };\n\n  function renderDays() {\n    const dayFormat = \"EEEE\";\n    const dateFormat = \"d\";\n    const dateFormats = \"MMMM yyyy\";\n    const days = [];\n    let startDay = subDays(currentWeek, 3);\n\n    for (let i = 0; i < maxValue; i++) {\n      days.push(React.createElement(\"div\", {\n        id: `${getId(addDays(startDay, i))}`,\n        className: `Datepicker--DateDayItem ${getStyles(addDays(startDay, i))}`,\n        key: i * i + 2,\n        onClick: () => onDateClick(addDays(startDay, i)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, getDate(addDays(startDay, i)) === 1 ? React.createElement(Waypoint, {\n        horizontal: true,\n        onEnter: () => setSoftSelect(addDays(startDay, i)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : null, getDate(addDays(startDay, i)) === 20 ? React.createElement(Waypoint, {\n        horizontal: true,\n        onEnter: () => setSoftSelect(addDays(startDay, i)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : null, isSameDay(addDays(startDay, i), currentDate) ? React.createElement(Waypoint, {\n        horizontal: true,\n        onEnter: () => setSoftSelect(addDays(startDay, i)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: \"Datepicker--DateLabel\",\n        key: i * i + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, format(addDays(startDay, i), dateFormat), \"th\"), React.createElement(\"div\", {\n        className: \"Datepicker--MonthYearLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, scroll ? format(softSelect, dateFormats) : format(currentWeek, dateFormats)), React.createElement(\"div\", {\n        className: \"Datepicker--DayLabel\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"(\", format(addDays(startDay, i), dayFormat), \")\")));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"container\",\n      className: `${getScroll()}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, days);\n  }\n\n  const onDateClick = day => {\n    // if (!isBefore(day, currentDate)) {\n    if (day, currentDate) {\n      selectDate = null;\n      setSelectedDate(day);\n\n      if (props.getSelectedDay) {\n        props.getSelectedDay(day);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.getSelectedDay) {\n      if (selectDate) {\n        props.getSelectedDay(selectDate);\n      } else {\n        props.getSelectedDay(new Date());\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (selectDate) {\n      if (!isSameDay(selectedDate, selectDate)) {\n        setSelectedDate(selectDate);\n        setTimeout(() => {\n          let view = document.getElementById('selected');\n\n          if (view) {\n            view.scrollIntoView({\n              behavior: \"smooth\",\n              inline: \"center\",\n              block: \"nearest\"\n            });\n          }\n        }, 20);\n      }\n    }\n  }, [selectDate]);\n  let e = document.getElementById('container');\n  let width = e ? e.getBoundingClientRect().width : null;\n\n  const nextWeek = () => {\n    scroll ? document.getElementById('container').scrollLeft += width : setCurrentWeek(addDays(currentWeek, 1));\n  };\n\n  const prevWeek = () => {\n    scroll ? document.getElementById('container').scrollLeft -= width : setCurrentWeek(subDays(currentWeek, 1));\n  }; // noinspection SpellCheckingInspection\n\n\n  const dateFormat = \"MMMM yyyy\";\n  return React.createElement(\"div\", {\n    className: \"Datepicker--Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Datepicker--Strip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Datepicker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"Datepicker--button-prev\",\n    onClick: prevWeek,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"\\u2190\"), renderDays(), React.createElement(\"button\", {\n    className: \"Datepicker--button-next\",\n    onClick: nextWeek,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\\u2192\"))));\n}","map":{"version":3,"sources":["/home/praveesh/Desktop/github/parkzeus/src/Components/Charts/DateSlider/DateSlider.js"],"names":["React","useEffect","useState","Waypoint","addDays","addWeeks","format","getDate","isBefore","isSameDay","isAfter","subDays","subWeeks","DatePicker","props","selectedDate","setSelectedDate","Date","softSelect","setSoftSelect","currentWeek","setCurrentWeek","currentDate","endDate","shouldScroll","selectDate","scroll","maxValue","getStyles","day","classes","push","join","getId","getScroll","renderDays","dayFormat","dateFormat","dateFormats","days","startDay","i","onDateClick","getSelectedDay","setTimeout","view","document","getElementById","scrollIntoView","behavior","inline","block","e","width","getBoundingClientRect","nextWeek","scrollLeft","prevWeek"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useState} from \"react\";\nimport {Waypoint} from 'react-waypoint';\nimport \"./dateSlider.scss\"\nimport {addDays, addWeeks, format, getDate, isBefore, isSameDay, isAfter, subDays, subWeeks} from \"date-fns\";\n\nexport default function DatePicker(props) {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [softSelect, setSoftSelect] = useState(new Date());\n    const [currentWeek, setCurrentWeek] = useState(new Date());\n    const [currentDate] = useState(new Date());\n    const {endDate, shouldScroll} = props;\n    let {selectDate} = props;\n    let scroll = false;\n    shouldScroll === true? scroll = true : scroll = false;\n    let maxValue;\n    if (scroll===false){\n        maxValue = 7;\n    }\n    else{\n        maxValue = endDate | 90;\n    }\n    const getStyles = (day) => {\n        const classes = [];\n        if (isSameDay(day, selectedDate)) {\n            classes.push('DateDayItem--selected')\n        }\n        if (isBefore(day, currentDate)) {\n            classes.push('DateDayItem--disabled')\n        }\n        if (isAfter(day, currentDate)) {\n            classes.push('DateDayItem--disabled')\n        }\n        return classes.join(' ')\n    };\n    const getId = (day) => {\n        if (isSameDay(day, selectedDate)) {\n            return ('selected')\n        } else {\n            return (\"\")\n        }\n    };\n    const getScroll = () => {\n        if (scroll === true) {\n            return ('Datepicker--DateList--scrollable');\n        } else {\n            maxValue = 7;\n            return ('Datepicker--DateList');\n        }\n    };\n\n    function renderDays() {\n        const dayFormat = \"EEEE\";\n        const dateFormat = \"d\";\n        const dateFormats = \"MMMM yyyy\";\n\n        const days = [];\n        let startDay = subDays(currentWeek,3);\n        for (let i = 0; i < maxValue; i++) {\n            days.push(\n                <div id={`${getId(addDays(startDay, i))}`}\n                     className={`Datepicker--DateDayItem ${getStyles(addDays(startDay, i))}`}\n                     key={i * i + 2}\n                     onClick={() => onDateClick(addDays(startDay, i))}\n                >\n                    {getDate(addDays(startDay, i)) === 1 ?\n                        <Waypoint horizontal={true} onEnter={() => (setSoftSelect(addDays(startDay, i)))}/> : null}\n                    {getDate(addDays(startDay, i)) === 20 ?\n                        <Waypoint horizontal={true} onEnter={() => (setSoftSelect(addDays(startDay, i)))}/> : null}\n                    {isSameDay(addDays(startDay, i), currentDate) ?\n                        <Waypoint horizontal={true} onEnter={() => (setSoftSelect(addDays(startDay, i)))}/> : null}\n                    <div className={\"Datepicker--DateLabel\"} key={i * i + 1}>\n                        {format(addDays(startDay, i), dateFormat)}th\n                    </div>\n\n                    <div className={\"Datepicker--MonthYearLabel\"}>\n                        {scroll ? format(softSelect, dateFormats) : format(currentWeek, dateFormats)}\n                        {/*{!scroll? isSameMonth(softSelect,currentWeek)? null: \" / \" + format(softSelect, dateFormat) : null}*/}\n                    </div>\n\n                    <div className={\"Datepicker--DayLabel\"} key={i}>\n                        ({format(addDays(startDay, i), dayFormat)})\n                    </div>\n                </div>\n            );\n        }\n        return <div id={\"container\"} className={`${getScroll()}`}>{days}</div>;\n    }\n\n    const onDateClick = day => {\n        // if (!isBefore(day, currentDate)) {\n        if ((day, currentDate)) {\n            selectDate = null;\n            setSelectedDate(day);\n            if (props.getSelectedDay) {\n                props.getSelectedDay(day);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (props.getSelectedDay) {\n            if (selectDate) {\n                props.getSelectedDay(selectDate);\n            } else {\n                props.getSelectedDay(new Date());\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        if (selectDate) {\n            if (!isSameDay(selectedDate, selectDate)) {\n                setSelectedDate(selectDate);\n                setTimeout(() => {\n                    let view = document.getElementById('selected');\n                    if (view) {\n                        view.scrollIntoView({behavior: \"smooth\", inline: \"center\", block: \"nearest\"});\n                    }\n                }, 20);\n            }\n        }\n    }, [selectDate]);\n\n\n    let e = document.getElementById('container');\n    let width = e ? e.getBoundingClientRect().width : null;\n\n    const nextWeek = () => {\n        scroll ? document.getElementById('container').scrollLeft += width : setCurrentWeek(addDays(currentWeek, 1))\n    };\n\n    const prevWeek = () => {\n        scroll ? document.getElementById('container').scrollLeft -= width : setCurrentWeek(subDays(currentWeek, 1))\n    };\n\n    // noinspection SpellCheckingInspection\n    const dateFormat = \"MMMM yyyy\";\n    return (\n        <div className={\"Datepicker--Container\"}>\n            <div className={\"Datepicker--Strip\"}>\n             {/* <span className={\"Datepicker--MonthYearLabel\"}>\n                 {scroll ? format(softSelect, dateFormat) : format(currentWeek, dateFormat)}\n                 {!scroll? isSameMonth(softSelect,currentWeek)? null: \" / \" + format(softSelect, dateFormat) : null}\n             </span> */}\n                <div className={\"Datepicker\"}>\n                    <button className={\"Datepicker--button-prev\"} onClick={prevWeek}>←</button>\n                    {renderDays()}\n                    <button className={\"Datepicker--button-next\"} onClick={nextWeek}>→</button>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}