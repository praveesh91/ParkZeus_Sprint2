{"ast":null,"code":"import _slicedToArray from\"/home/praveesh/Desktop/github/parkzeus/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from\"react-router-dom\";import{makeStyles}from'@material-ui/core/styles';import{List,ListItem,ListItemText,Divider,Collapse}from'@material-ui/core';import AddIcon from'@material-ui/icons/Add';import RemoveIcon from'@material-ui/icons/Remove';import'./Sidebar.scss';// import dashboard from '../../pages/Dashboard/Background'\n// import Dashboard from '../../pages/Dashboard/Dashboard';\nexport default function SidebarMenuItem(props){var name=props.name,Icon=props.Icon,link=props.link,_props$items=props.items,items=_props$items===void 0?[]:_props$items;var classes=useStyles();var isExpandable=items&&items.length>0;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];function handleClick(){setOpen(!open);}var MenuItemRoot=React.createElement(ListItem,{className:classes.listItem,divider:true,button:true,onClick:handleClick},!!Icon&&// <ListItemIcon >\n//   <Icon />\n// </ListItemIcon>\nReact.createElement(\"img\",{className:\"sidebarIcon\",src:Icon,alt:\"icon\"}),React.createElement(Link,{to:link,style:{textDecoration:'none',color:'black'}},React.createElement(ListItemText,{className:classes.textSize,primary:name,inset:!Icon})),isExpandable&&!open&&React.createElement(AddIcon,{fontSize:'small'}),isExpandable&&open&&React.createElement(RemoveIcon,{fontSize:'small'}));var MenuItemChildren=isExpandable?React.createElement(Collapse,{in:open,timeout:\"auto\",unmountOnExit:true},React.createElement(Divider,null),React.createElement(List,{component:\"div\",disablePadding:true},items.map(function(item,index){return React.createElement(SidebarMenuItem,Object.assign({},item,{key:index}));}))):null;return React.createElement(React.Fragment,null,MenuItemRoot,MenuItemChildren);}var useStyles=makeStyles(function(theme){return{listItem:{paddingBottom:'17px',paddingTop:'17px'},textSize:{fontSize:'15px',whiteSpace:'normal'}};});","map":{"version":3,"sources":["/home/praveesh/Desktop/github/parkzeus/src/Components/Sidebar/SidebarMenuItem.js"],"names":["React","Link","makeStyles","List","ListItem","ListItemText","Divider","Collapse","AddIcon","RemoveIcon","SidebarMenuItem","props","name","Icon","link","items","classes","useStyles","isExpandable","length","useState","open","setOpen","handleClick","MenuItemRoot","listItem","textDecoration","color","textSize","MenuItemChildren","map","item","index","theme","paddingBottom","paddingTop","fontSize","whiteSpace"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,OAAQC,IAAR,CAAcC,QAAd,CAAwBC,YAAxB,CAAsCC,OAAtC,CAA+CC,QAA/C,KAA8D,mBAA9D,CAEA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAO,gBAAP,CAEA;AACA;AAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,IAEnCC,CAAAA,IAFmC,CAEFD,KAFE,CAEnCC,IAFmC,CAE7BC,IAF6B,CAEFF,KAFE,CAE7BE,IAF6B,CAEvBC,IAFuB,CAEFH,KAFE,CAEvBG,IAFuB,cAEFH,KAFE,CAEjBI,KAFiB,CAEjBA,KAFiB,uBAET,EAFS,cAG3C,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CACA,GAAMC,CAAAA,YAAY,CAAGH,KAAK,EAAIA,KAAK,CAACI,MAAN,CAAe,CAA7C,CAJ2C,oBAKnBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CALmB,oDAKpCC,IALoC,qBAK9BC,OAL8B,qBAO3C,QAASC,CAAAA,WAAT,EAAuB,CACnBD,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CAED,GAAMG,CAAAA,YAAY,CAEhB,oBAAC,QAAD,EAAU,SAAS,CAAER,OAAO,CAACS,QAA7B,CAAuC,OAAO,CAAE,IAAhD,CAAsD,MAAM,KAA5D,CAA6D,OAAO,CAAEF,WAAtE,EAEG,CAAC,CAACV,IAAF,EACC;AACA;AACA;AACA,2BAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEA,IAAlC,CAAwC,GAAG,CAAC,MAA5C,EANJ,CAUI,oBAAC,IAAD,EAAM,EAAE,CAAEC,IAAV,CAAgB,KAAK,CAAE,CAAEY,cAAc,CAAE,MAAlB,CAA0BC,KAAK,CAAE,OAAjC,CAAvB,EACE,oBAAC,YAAD,EAAc,SAAS,CAAEX,OAAO,CAACY,QAAjC,CAA2C,OAAO,CAAEhB,IAApD,CAA0D,KAAK,CAAE,CAACC,IAAlE,EADF,CAVJ,CAgBGK,YAAY,EAAI,CAACG,IAAjB,EAAyB,oBAAC,OAAD,EAAS,QAAQ,CAAE,OAAnB,EAhB5B,CAiBGH,YAAY,EAAIG,IAAhB,EAAwB,oBAAC,UAAD,EAAY,QAAQ,CAAE,OAAtB,EAjB3B,CAFF,CAyBA,GAAMQ,CAAAA,gBAAgB,CAAGX,YAAY,CACnC,oBAAC,QAAD,EAAU,EAAE,CAAEG,IAAd,CAAoB,OAAO,CAAC,MAA5B,CAAmC,aAAa,KAAhD,EACE,oBAAC,OAAD,MADF,CAEE,oBAAC,IAAD,EAAM,SAAS,CAAC,KAAhB,CAAsB,cAAc,KAApC,EACGN,KAAK,CAACe,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,QACT,qBAAC,eAAD,kBAAqBD,IAArB,EAA2B,GAAG,CAAEC,KAAhC,GADS,EAAV,CADH,CAFF,CADmC,CASjC,IATJ,CAYF,MAEA,yCACGR,YADH,CAEGK,gBAFH,CAFA,CAOH,CACD,GAAMZ,CAAAA,SAAS,CAAGf,UAAU,CAAC,SAAA+B,KAAK,QAAK,CACrCR,QAAQ,CAAE,CACRS,aAAa,CAAE,MADP,CAERC,UAAU,CAAE,MAFJ,CAD2B,CAKrCP,QAAQ,CAAC,CACPQ,QAAQ,CAAE,MADH,CAEPC,UAAU,CAAE,QAFL,CAL4B,CAAL,EAAN,CAA5B","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {List, ListItem, ListItemText, Divider, Collapse} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport './Sidebar.scss'\n\n// import dashboard from '../../pages/Dashboard/Background'\n// import Dashboard from '../../pages/Dashboard/Dashboard';\n\nexport default function SidebarMenuItem(props) {\n\n    const { name, Icon, link, items = [] } = props\n    const classes = useStyles()\n    const isExpandable = items && items.length > 0\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(!open)\n      }\n    \n      const MenuItemRoot = (\n\n        <ListItem className={classes.listItem} divider={true} button onClick={handleClick}>\n          {/* Display an icon if any */}\n          {!!Icon && (\n            // <ListItemIcon >\n            //   <Icon />\n            // </ListItemIcon>\n            <img className=\"sidebarIcon\" src={Icon} alt=\"icon\" />\n            \n          )}\n          \n            <Link to={link} style={{ textDecoration: 'none', color: 'black' }}>\n              <ListItemText className={classes.textSize} primary={name} inset={!Icon} />\n            </Link>\n        \n            \n          {/* Display the expand menu if the item has children */}\n          {isExpandable && !open && <AddIcon fontSize={'small'} />}\n          {isExpandable && open && <RemoveIcon fontSize={'small'} />}\n        </ListItem>\n\n\n      )\n    \n      const MenuItemChildren = isExpandable ? (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Divider />\n          <List component=\"div\" disablePadding>\n            {items.map((item, index) => (\n              <SidebarMenuItem {...item} key={index} />\n            ))}\n          </List>\n        </Collapse>\n      ) : null\n    \n\n    return (\n\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n    )\n}\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    paddingBottom: '17px',\n    paddingTop: '17px'\n  },\n  textSize:{\n    fontSize: '15px',\n    whiteSpace: 'normal'\n  }\n}))"]},"metadata":{},"sourceType":"module"}