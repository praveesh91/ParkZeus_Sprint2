{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.graphType = () => {\n      const Chart_type = this.props.chartType;\n      console.log(\"Chart_type in ChartContainer is \", Chart_type);\n\n      if (Chart_type === 'Line') {\n        this.setState({\n          showLine: true,\n          showBar: false,\n          showPie: false\n        });\n      } else if (Chart_type === 'Bar') {\n        this.setState({\n          showLine: false,\n          showBar: true,\n          showPie: false\n        });\n      } else if (Chart_type === \"Pie\") {\n        this.setState({\n          showLine: false,\n          showBar: false,\n          showPie: true\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false\n    };\n  }\n\n  componentDidMount() {\n    axios('https://praveesh91.github.io/test_json/parkingData.json').then(response => {\n      const {\n        parkingData\n      } = response.data; // const values = parkingData.map(d => d.vehicles.booked)\n      // const valus = parkingData.map(d => d.day)\n\n      const chartData = {\n        labels: parkingData.map(k => k.day),\n        datasets: [{\n          label: 'Booked',\n          fill: 'false',\n          data: parkingData.map(d => d.vehicles.booked),\n          backgroundColor: 'red',\n          borderColor: 'red'\n        }, {\n          label: 'Vacant',\n          fill: 'false',\n          data: parkingData.map(d => d.vehicles.vacant),\n          backgroundColor: 'blue',\n          borderColor: 'blue'\n        }, {\n          label: 'Occupied',\n          fill: 'false',\n          data: parkingData.map(d => d.vehicles.occupied),\n          backgroundColor: 'green',\n          borderColor: 'green'\n        }]\n      };\n      this.setState({\n        chartData\n      });\n    });\n  }\n\n  render() {\n    const {\n      showLine,\n      showBar,\n      showPie\n    } = this.state; // console.log(this.state.showBar)\n    // console.log(this.state)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, showLine && React.createElement(Line, {\n      data: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), showBar && React.createElement(Bar, {\n      data: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), showPie && React.createElement(Pie, {\n      data: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartContainer;","map":{"version":3,"sources":["/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js"],"names":["React","render","axios","Line","Bar","Pie","ChartContainer","Component","constructor","props","graphType","Chart_type","chartType","console","log","setState","showLine","showBar","showPie","state","chartData","componentDidMount","then","response","parkingData","data","labels","map","k","day","datasets","label","fill","d","vehicles","booked","backgroundColor","borderColor","vacant","occupied"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false,\n    }\n  }\n\n  componentDidMount() {\n     axios('https://praveesh91.github.io/test_json/parkingData.json')\n      .then((response) => {\n        const { parkingData } = response.data;\n        // const values = parkingData.map(d => d.vehicles.booked)\n        // const valus = parkingData.map(d => d.day)\n        const chartData = {\n            labels: parkingData.map(k => k.day),\n            datasets: [\n                {\n                label: 'Booked',\n                fill: 'false',\n                data: parkingData.map(d => d.vehicles.booked),\n                backgroundColor: 'red',\n                borderColor: 'red',\n                },\n                {\n                  label: 'Vacant',\n                  fill: 'false',\n                  data: parkingData.map(d => d.vehicles.vacant),\n                  backgroundColor: 'blue',\n                  borderColor: 'blue',\n                },\n                {\n                  label: 'Occupied',\n                  fill: 'false',\n                  data: parkingData.map(d => d.vehicles.occupied),\n                  backgroundColor: 'green',\n                  borderColor: 'green',\n                }\n            ]\n        }\n        this.setState({ chartData });\n      });\n\n  }\n  \ngraphType = ()=>{\n\n  const Chart_type = this.props.chartType;\n  console.log(\"Chart_type in ChartContainer is \",Chart_type);\n  if (Chart_type==='Line'){\n    this.setState({\n      showLine: true,\n      showBar: false,\n      showPie: false,\n    })\n  }\n  else if(Chart_type==='Bar'){\n      this.setState({\n        showLine: false,\n        showBar: true,\n        showPie: false,\n      })\n  }\n  else if(Chart_type===\"Pie\"){\n      this.setState({\n        showLine: false,\n        showBar: false,\n        showPie: true,\n      })\n  }\n\n  console.log(this.state)\n}\n\nrender() {\n\n\n  const {showLine, showBar, showPie} = this.state;\n  // console.log(this.state.showBar)\n \n  // console.log(this.state)\n  return (\n  <div>\n      {showLine && <Line data={this.state.chartData}/>}\n      {showBar && <Bar data={this.state.chartData}/>}\n      {showPie && <Pie data={this.state.chartData}/>}\n  </div>\n  );\n}\n}\nexport default ChartContainer;\n"]},"metadata":{},"sourceType":"module"}