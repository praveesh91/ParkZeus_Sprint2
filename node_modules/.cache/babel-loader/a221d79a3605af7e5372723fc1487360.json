{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/Desktop/github/parkzeus/src/Pages/Profile/Modal.js\";\nimport React, { useState } from \"react\";\nimport { Button, Link, DialogTitle, Dialog, DialogActions, DialogContent, DialogContentText } from '@material-ui/core/';\nimport showIcon from '../../Assets/Images/eye for password.png';\nexport default function Modal() {\n  const [open, setOpen] = React.useState(false);\n  const [currPwd, setcurrPwd] = useState(\"\");\n  const [newPwd, setnewPwd] = useState(\"\");\n  const [verifyPwd, setverifyPwd] = useState(\"\");\n  const [showValCurr, setshowValCurr] = useState(false);\n  const [showValNew, setshowValNew] = useState(false);\n  const [showValVer, setshowValVer] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const toggleShowCurr = event => {\n    event.preventDefault();\n    setshowValCurr(!showValCurr);\n  };\n\n  const toggleShowNew = event => {\n    event.preventDefault();\n    setshowValNew(!showValNew);\n  };\n\n  const toggleShowVerify = event => {\n    event.preventDefault();\n    setshowValVer(!showValVer);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pwdLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Change Password\")), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Change Password\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Current Password\"), React.createElement(\"input\", {\n    className: \"inputBox\",\n    type: showValCurr ? \"text\" : \"password\",\n    value: currPwd,\n    onChange: e => setcurrPwd(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnCustom\",\n    onClick: toggleShowCurr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: showIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"input\", {\n    className: \"inputBox\",\n    type: showValNew ? \"text\" : \"password\",\n    value: newPwd,\n    onChange: e => setnewPwd(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnCustom\",\n    onClick: toggleShowNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: showIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Verify Password\"), React.createElement(\"input\", {\n    className: \"inputBox\",\n    type: showValVer ? \"text\" : \"password\",\n    value: verifyPwd,\n    onChange: e => setverifyPwd(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnCustom\",\n    onClick: toggleShowVerify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: showIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["/home/praveesh/Desktop/github/parkzeus/src/Pages/Profile/Modal.js"],"names":["React","useState","Button","Link","DialogTitle","Dialog","DialogActions","DialogContent","DialogContentText","showIcon","Modal","open","setOpen","currPwd","setcurrPwd","newPwd","setnewPwd","verifyPwd","setverifyPwd","showValCurr","setshowValCurr","showValNew","setshowValNew","showValVer","setshowValVer","handleClickOpen","handleClose","toggleShowCurr","event","preventDefault","toggleShowNew","toggleShowVerify","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,MAAnC,EAA2CC,aAA3C,EAA0DC,aAA1D,EAAyEC,iBAAzE,QAAiG,oBAAjG;AAEA,OAAOC,QAAP,MAAqB,0CAArB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMwB,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMc,WAAW,GAAG,MAAM;AACxBd,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMe,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAHD;;AAKA,QAAMW,aAAa,GAAIF,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAHD;;AAKA,QAAMU,gBAAgB,GAAIH,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEE,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,OAAO,EAAEe,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBADH,CANF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACA,IAAA,SAAS,EAAC,UADV;AAEE,IAAA,IAAI,EAAEP,WAAW,GAAG,MAAH,GAAY,UAF/B;AAGE,IAAA,KAAK,EAAEN,OAHT;AAIE,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,UAAU,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADI,EAUJ;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEP,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAElB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVI,EAaJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACI,IAAA,SAAS,EAAC,UADd;AAEE,IAAA,IAAI,EAAEY,UAAU,GAAG,MAAH,GAAY,UAF9B;AAGE,IAAA,KAAK,EAAEN,MAHT;AAIE,IAAA,QAAQ,EAAEiB,CAAC,IAAIhB,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbI,EAsBJ;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEJ,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAErB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBI,EAyBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,IAAI,EAAEc,UAAU,GAAG,MAAH,GAAY,UAFhC;AAGI,IAAA,KAAK,EAAEN,SAHX;AAII,IAAA,QAAQ,EAAEe,CAAC,IAAId,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzBI,EAkCJ;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEH,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEtB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCI,CADA,CADF,CATF,EAmDE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEiB,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAnDF,CAJF,CADF;AAmED","sourcesContent":["import React,{ useState } from \"react\";\nimport {Button, Link, DialogTitle, Dialog, DialogActions, DialogContent, DialogContentText} from '@material-ui/core/';\n\nimport showIcon from '../../Assets/Images/eye for password.png'\n\nexport default function Modal() {\n  const [open, setOpen] = React.useState(false);\n  const [currPwd, setcurrPwd] = useState(\"\");\n  const [newPwd, setnewPwd] = useState(\"\");\n  const [verifyPwd, setverifyPwd] = useState(\"\");\n  const [showValCurr, setshowValCurr] = useState(false);\n  const [showValNew, setshowValNew] = useState(false);\n  const [showValVer, setshowValVer] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const toggleShowCurr = (event) => {\n    event.preventDefault()\n    setshowValCurr(!showValCurr)\n  }\n\n  const toggleShowNew = (event) => {\n    event.preventDefault()\n    setshowValNew(!showValNew)\n  }\n\n  const toggleShowVerify = (event) => {\n    event.preventDefault()\n    setshowValVer(!showValVer)\n  }\n\n  return (\n    <div>\n        <div className=\"pwdLink\">\n            <Link onClick={handleClickOpen}>Change Password</Link>\n        </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Change Password\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          <form>\n      <label>\n        <p>Current Password</p>\n        <input\n        className=\"inputBox\"\n          type={showValCurr ? \"text\" : \"password\"}\n          value={currPwd}\n          onChange={e => setcurrPwd(e.target.value)}\n        />\n      </label>\n      <button className=\"btnCustom\" onClick={toggleShowCurr}>\n        <img src={showIcon} />\n      </button>\n      <label>\n        <p>New Password</p>\n        <input\n            className=\"inputBox\"\n          type={showValNew ? \"text\" : \"password\"}\n          value={newPwd}\n          onChange={e => setnewPwd(e.target.value)}\n        />\n      </label>\n      <button className=\"btnCustom\" onClick={toggleShowNew}>\n        <img src={showIcon} />\n      </button>\n      <label>\n        <p>Verify Password</p>\n        <input\n            className=\"inputBox\"\n            type={showValVer ? \"text\" : \"password\"}\n            value={verifyPwd}\n            onChange={e => setverifyPwd(e.target.value)}\n        />\n      </label>\n      <button className=\"btnCustom\" onClick={toggleShowVerify}>\n        <img src={showIcon} />\n      </button>\n    </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}