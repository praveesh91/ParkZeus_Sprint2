{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.graphType = () => {\n      // const fillValue = {showLine ? true : false}\n      const Chart_type = this.props.chartType; // console.log(\"Chart_type in ChartContainer is \",Chart_type);\n\n      if (Chart_type === 'Line') {\n        this.setState({\n          showLine: true,\n          showBar: false,\n          showPie: false,\n          fillFlag: false\n        });\n      } else if (Chart_type === 'Bar') {\n        this.setState({\n          showLine: false,\n          showBar: true,\n          showPie: false\n        });\n      } else if (Chart_type === \"Pie\") {\n        this.setState({\n          showLine: false,\n          showBar: false,\n          showPie: true,\n          fillFlag: true\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: true\n    };\n  }\n\n  componentDidMount() {\n    axios('https://praveesh91.github.io/test_json/parkingData.json').then(response => {\n      const {\n        parkingData\n      } = response.data; // const values = parkingData.map(d => d.vehicles.booked)\n      // const valus = parkingData.map(d => d.day)\n\n      const {\n        fillFlag\n      } = this.state;\n      console.log(\"showLine=\", fillFlag);\n      const chartData = {\n        labels: parkingData.map(k => k.day),\n        datasets: [{\n          label: 'Booked',\n          fill: fillFlag ? true : false,\n          // fill: true,\n          data: parkingData.map(d => d.vehicles.booked),\n          backgroundColor: 'blue',\n          borderColor: 'blue'\n        } // {\n        //   label: 'Vacant',\n        //   // fill: true,\n        //   data: parkingData.map(d => d.vehicles.vacant),\n        //   backgroundColor: 'blue',\n        //   borderColor: 'blue',\n        // },\n        // {\n        //   label: 'Occupied',\n        //   // fill: 'false',\n        //   data: parkingData.map(d => d.vehicles.occupied),\n        //   backgroundColor: 'green',\n        //   borderColor: 'green',\n        // }\n        ]\n      };\n      this.setState({\n        chartData\n      });\n    });\n  }\n\n  render() {\n    const {\n      showLine,\n      showBar,\n      showPie,\n      chartData\n    } = this.state;\n    console.log(\"chartData=\", chartData);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, showLine && React.createElement(Line, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), showBar && React.createElement(Bar, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), showPie && React.createElement(Line, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartContainer;","map":{"version":3,"sources":["/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js"],"names":["React","axios","Line","Bar","ChartContainer","Component","constructor","props","graphType","Chart_type","chartType","setState","showLine","showBar","showPie","fillFlag","state","chartData","componentDidMount","then","response","parkingData","data","console","log","labels","map","k","day","datasets","label","fill","d","vehicles","booked","backgroundColor","borderColor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: true\n    }\n  }\n\n  componentDidMount() {\n\n    axios('https://praveesh91.github.io/test_json/parkingData.json')\n      .then((response) => {\n        const { parkingData } = response.data;\n        // const values = parkingData.map(d => d.vehicles.booked)\n        // const valus = parkingData.map(d => d.day)\n        const {fillFlag} = this.state\n        console.log(\"showLine=\", fillFlag)\n        const chartData = {\n            labels: parkingData.map(k => k.day),\n            datasets: [\n                {\n                label: 'Booked',\n                fill: fillFlag ? true : false,\n                // fill: true,\n                data: parkingData.map(d => d.vehicles.booked),\n                backgroundColor: 'blue',\n                borderColor: 'blue',\n                },\n                // {\n                //   label: 'Vacant',\n                //   // fill: true,\n                //   data: parkingData.map(d => d.vehicles.vacant),\n                //   backgroundColor: 'blue',\n                //   borderColor: 'blue',\n                // },\n                // {\n                //   label: 'Occupied',\n                //   // fill: 'false',\n                //   data: parkingData.map(d => d.vehicles.occupied),\n                //   backgroundColor: 'green',\n                //   borderColor: 'green',\n                // }\n            ],\n        }\n\n        this.setState({ chartData });\n      });\n\n  }\n  \ngraphType = ()=>{\n\n  // const fillValue = {showLine ? true : false}\n  const Chart_type = this.props.chartType;\n  // console.log(\"Chart_type in ChartContainer is \",Chart_type);\n  if (Chart_type==='Line'){\n    this.setState({\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: false\n    })\n  }\n  else if(Chart_type==='Bar'){\n      this.setState({\n        showLine: false,\n        showBar: true,\n        showPie: false,\n      })\n  }\n  else if(Chart_type===\"Pie\"){\n      this.setState({\n        showLine: false,\n        showBar: false,\n        showPie: true,\n        fillFlag: true\n      })\n  }\n\n}\n\nrender() {\n\n  const {showLine, showBar, showPie,chartData} = this.state;\n  console.log(\"chartData=\",chartData)\n  return (\n  <div>\n      {showLine && <Line data={chartData}/>}\n      {showBar && <Bar data={chartData}/>}\n      {showPie && <Line data={chartData}/>}\n  </div>\n  );\n}\n}\nexport default ChartContainer;\n"]},"metadata":{},"sourceType":"module"}