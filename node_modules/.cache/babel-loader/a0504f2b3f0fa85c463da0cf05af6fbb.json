{"ast":null,"code":"var _jsxFileName = \"/home/ayush/workspace/react-project/parkzeus/src/Pages/SolutionAdmin/index.js\";\nimport React, { Component } from 'react';\nimport ParkingSpaceListView from './ParkingManagement/ParkingSpace/ParkingSpaceListView';\nimport ParkingSpace from './ParkingManagement/ParkingSpace/ParkingSpace';\nimport ParkingSpaceMapView from './ParkingManagement/ParkingSpace/ParkingSpaceMapView';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nexport default class SolutionAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      card: true,\n      list: false,\n      map: false\n    };\n\n    this.changeHandler = id => {\n      this.setState({\n        card: !this.state.card,\n        list: !this.state.list\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      color: \"secondary\",\n      \"aria-label\": \"outlined secondary button group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"one\",\n      value: this.state.card,\n      onClick: this.changeHandler(one),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"One\"), React.createElement(Button, {\n      id: \"two\",\n      value: this.state.list,\n      onClick: this.changeHandler(two),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Two\"), React.createElement(Button, {\n      id: \"three\",\n      value: this.state.map,\n      onClick: this.changeHandler(three),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Three\")), React.createElement(ParkingSpaceMapView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ParkingSpaceListView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(ParkingSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n} // import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import SwipeableViews from 'react-swipeable-views';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// // import AddIcon from '@material-ui/icons/Add';\n// // import EditIcon from '@material-ui/icons/Edit';\n// // import UpIcon from '@material-ui/icons/KeyboardArrowUp';\n// import {Box,  Fab, Zoom, Typography, Tab, Tabs, AppBar  } from '@material-ui/core';\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <Typography\n//       component=\"div\"\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`action-tabpanel-${index}`}\n//       aria-labelledby={`action-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Box p={3}>{children}</Box>}\n//     </Typography>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `action-tab-${index}`,\n//     'aria-controls': `action-tabpanel-${index}`,\n//   };\n// }\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     backgroundColor: theme.palette.background.paper,\n//     width: 500,\n//     position: 'relative',\n//     minHeight: 200,\n//   },\n//   fab: {\n//     position: 'absolute',\n//     bottom: theme.spacing(2),\n//     right: theme.spacing(2),\n//   },\n// }));\n// export default function SolutionAdmin() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [value, setValue] = React.useState(0);\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n//   const handleChangeIndex = index => {\n//     setValue(index);\n//   };\n//   const transitionDuration = {\n//     enter: theme.transitions.duration.enteringScreen,\n//     exit: theme.transitions.duration.leavingScreen,\n//   };\n//   const fabs = [\n//     {\n//       color: 'primary',\n//       className: classes.fab,\n//       //icon: <AddIcon />,\n//       label: 'Add',\n//     },\n//     {\n//       color: 'secondary',\n//       className: classes.fab,\n//       //icon: <EditIcon />,\n//       label: 'Edit',\n//     },\n//     {\n//       color: 'inherit',\n//       className: clsx(classes.fab, classes.fabGreen),\n//       //icon: <UpIcon />,\n//       label: 'Expand',\n//     },\n//   ];\n//   return (\n//     <div className={classes.root}>\n//       <AppBar position=\"static\" color=\"default\">\n//         <Tabs\n//           value={value}\n//           onChange={handleChange}\n//           indicatorColor=\"primary\"\n//           textColor=\"primary\"\n//           variant=\"fullWidth\"\n//           aria-label=\"action tabs example\"\n//         >\n//           <Tab label=\"Item One\" {...a11yProps(0)} />\n//           <Tab label=\"Item Two\" {...a11yProps(1)} />\n//           <Tab label=\"Item Three\" {...a11yProps(2)} />\n//         </Tabs>\n//       </AppBar>\n//       <SwipeableViews\n//         axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n//         index={value}\n//         onChangeIndex={handleChangeIndex}\n//       >\n//         <TabPanel value={value} index={0} dir={theme.direction}>\n//                <ParkingSpace />\n//         </TabPanel>\n//         <TabPanel value={value} index={1} dir={theme.direction}>\n//               <ParkingSpaceListView />\n//         </TabPanel>\n//         <TabPanel value={value} index={2} dir={theme.direction}>\n//         <ParkingSpaceMapView />\n//         </TabPanel>\n//       </SwipeableViews>\n//       {fabs.map((fab, index) => (\n//         <Zoom\n//           key={fab.color}\n//           in={value === index}\n//           timeout={transitionDuration}\n//           style={{\n//             transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n//           }}\n//           unmountOnExit\n//         >\n//           <Fab aria-label={fab.label} className={fab.className} color={fab.color}>\n//             {fab.icon}\n//           </Fab>\n//         </Zoom>\n//       ))}\n//     </div>\n//   );\n// }\n// import React, { Component } from 'react';\n//  class SolutionAdmin extends Component {\n//         state = {\n//             card: true,\n//             list:false,\n//             map:false\n//         }\n//         changeHandler(){\n//             if(this.state.card === true){\n//                 <ParkingSpace />\n//             }\n//         }\n//     render() {\n//         return (\n//             <div>\n//                 <button ></button>\n//                 <button value={this.state.list} onClick={this.changeHandler}></button>\n//             </div>\n//         )\n//     }\n// }\n// export default SolutionAdmin;","map":{"version":3,"sources":["/home/ayush/workspace/react-project/parkzeus/src/Pages/SolutionAdmin/index.js"],"names":["React","Component","ParkingSpaceListView","ParkingSpace","ParkingSpaceMapView","Button","ButtonGroup","SolutionAdmin","state","card","list","map","changeHandler","id","setState","render","one","two","three"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,uDAAjC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAGA,eAAe,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEjDO,KAFiD,GAEzC;AACJC,MAAAA,IAAI,EAAC,IADD;AAEJC,MAAAA,IAAI,EAAC,KAFD;AAGJC,MAAAA,GAAG,EAAC;AAHA,KAFyC;;AAAA,SASjDC,aATiD,GAShCC,EAAD,IAAQ;AAEpB,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAC,CAAC,KAAKD,KAAL,CAAWC,IADP;AAEVC,QAAAA,IAAI,EAAC,CAAC,KAAKF,KAAL,CAAWE;AAFP,OAAd;AAKH,KAhBgD;AAAA;;AAmBjDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,WAAnB;AAA+B,oBAAW,iCAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAAnC;AAAyC,MAAA,OAAO,EAAE,KAAKG,aAAL,CAAmBI,GAAnB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,IAAnC;AAAyC,MAAA,OAAO,EAAE,KAAKE,aAAL,CAAmBK,GAAnB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,GAArC;AAA0C,MAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBM,KAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ,EAMI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AAhCgD,C,CAoCrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport ParkingSpaceListView from './ParkingManagement/ParkingSpace/ParkingSpaceListView';\nimport ParkingSpace from './ParkingManagement/ParkingSpace/ParkingSpace';\nimport ParkingSpaceMapView from './ParkingManagement/ParkingSpace/ParkingSpaceMapView';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\nexport default class SolutionAdmin extends Component {\n\n    state = {\n        card:true,\n        list:false,\n        map:false\n\n    }\n\n    changeHandler = (id) => {\n\n        this.setState({\n            card:!this.state.card,\n            list:!this.state.list,\n           \n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\n                    <Button id=\"one\" value={this.state.card} onClick={this.changeHandler(one)} >One</Button>\n                    <Button id=\"two\" value={this.state.list} onClick={this.changeHandler(two)}>Two</Button>\n                    <Button id=\"three\" value={this.state.map} onClick={this.changeHandler(three)}>Three</Button>\n                </ButtonGroup>\n                <ParkingSpaceMapView />\n                <ParkingSpaceListView />\n                <ParkingSpace />\n            </div>\n        )\n    }\n}\n\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import SwipeableViews from 'react-swipeable-views';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// // import AddIcon from '@material-ui/icons/Add';\n// // import EditIcon from '@material-ui/icons/Edit';\n// // import UpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n// import {Box,  Fab, Zoom, Typography, Tab, Tabs, AppBar  } from '@material-ui/core';\n\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n\n//   return (\n//     <Typography\n//       component=\"div\"\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`action-tabpanel-${index}`}\n//       aria-labelledby={`action-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Box p={3}>{children}</Box>}\n//     </Typography>\n//   );\n// }\n\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n\n// function a11yProps(index) {\n//   return {\n//     id: `action-tab-${index}`,\n//     'aria-controls': `action-tabpanel-${index}`,\n//   };\n// }\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     backgroundColor: theme.palette.background.paper,\n//     width: 500,\n//     position: 'relative',\n//     minHeight: 200,\n//   },\n//   fab: {\n//     position: 'absolute',\n//     bottom: theme.spacing(2),\n//     right: theme.spacing(2),\n//   },\n \n// }));\n\n// export default function SolutionAdmin() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [value, setValue] = React.useState(0);\n\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n\n//   const handleChangeIndex = index => {\n//     setValue(index);\n//   };\n\n//   const transitionDuration = {\n//     enter: theme.transitions.duration.enteringScreen,\n//     exit: theme.transitions.duration.leavingScreen,\n//   };\n\n//   const fabs = [\n//     {\n//       color: 'primary',\n//       className: classes.fab,\n//       //icon: <AddIcon />,\n//       label: 'Add',\n//     },\n//     {\n//       color: 'secondary',\n//       className: classes.fab,\n//       //icon: <EditIcon />,\n//       label: 'Edit',\n//     },\n//     {\n//       color: 'inherit',\n//       className: clsx(classes.fab, classes.fabGreen),\n//       //icon: <UpIcon />,\n//       label: 'Expand',\n//     },\n//   ];\n\n//   return (\n//     <div className={classes.root}>\n//       <AppBar position=\"static\" color=\"default\">\n//         <Tabs\n//           value={value}\n//           onChange={handleChange}\n//           indicatorColor=\"primary\"\n//           textColor=\"primary\"\n//           variant=\"fullWidth\"\n//           aria-label=\"action tabs example\"\n//         >\n//           <Tab label=\"Item One\" {...a11yProps(0)} />\n//           <Tab label=\"Item Two\" {...a11yProps(1)} />\n//           <Tab label=\"Item Three\" {...a11yProps(2)} />\n//         </Tabs>\n//       </AppBar>\n//       <SwipeableViews\n//         axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n//         index={value}\n//         onChangeIndex={handleChangeIndex}\n//       >\n//         <TabPanel value={value} index={0} dir={theme.direction}>\n    \n//                <ParkingSpace />\n//         </TabPanel>\n//         <TabPanel value={value} index={1} dir={theme.direction}>\n        \n//               <ParkingSpaceListView />\n\n//         </TabPanel>\n//         <TabPanel value={value} index={2} dir={theme.direction}>\n//         <ParkingSpaceMapView />\n//         </TabPanel>\n//       </SwipeableViews>\n//       {fabs.map((fab, index) => (\n//         <Zoom\n//           key={fab.color}\n//           in={value === index}\n//           timeout={transitionDuration}\n//           style={{\n//             transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n//           }}\n//           unmountOnExit\n//         >\n//           <Fab aria-label={fab.label} className={fab.className} color={fab.color}>\n//             {fab.icon}\n//           </Fab>\n//         </Zoom>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n// import React, { Component } from 'react';\n\n//  class SolutionAdmin extends Component {\n\n//         state = {\n//             card: true,\n//             list:false,\n//             map:false\n//         }\n\n//         changeHandler(){\n//             if(this.state.card === true){\n\n\n\n//                 <ParkingSpace />\n//             }\n//         }\n\n//     render() {\n//         return (\n//             <div>\n//                 <button ></button>\n//                 <button value={this.state.list} onClick={this.changeHandler}></button>\n//             </div>\n//         )\n//     }\n// }\n// export default SolutionAdmin;"]},"metadata":{},"sourceType":"module"}