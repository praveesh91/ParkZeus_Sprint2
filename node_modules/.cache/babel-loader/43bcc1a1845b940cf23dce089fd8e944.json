{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.graphType = () => {\n      // const fillValue = {showLine ? true : false}\n      const Chart_type = this.props.chartType; // console.log(\"Chart_type in ChartContainer is \",Chart_type);\n\n      if (Chart_type === 'Line') {\n        this.setState({\n          showLine: true,\n          showBar: false,\n          showPie: false,\n          fillFlag: false\n        });\n      } else if (Chart_type === 'Bar') {\n        this.setState({\n          showLine: false,\n          showBar: true,\n          showPie: false\n        });\n      } else if (Chart_type === \"Pie\") {\n        this.setState({\n          showLine: false,\n          showBar: false,\n          showPie: true,\n          fillFlag: true\n        });\n      }\n\n      graphData();\n    };\n\n    this.graphData = () => {\n      axios('https://praveesh91.github.io/test_json/parkingData.json').then(response => {\n        const {\n          parkingData\n        } = response.data; // const values = parkingData.map(d => d.vehicles.booked)\n        // const valus = parkingData.map(d => d.day)\n\n        const {\n          fillFlag\n        } = this.state;\n        console.log(\"fillFlagInComponentDidMount=\", fillFlag);\n        const chartData = {\n          labels: parkingData.map(k => k.day),\n          datasets: [{\n            label: 'Booked',\n            fill: fillFlag ? true : false,\n            // fill: true,\n            data: parkingData.map(d => d.vehicles.booked),\n            backgroundColor: 'blue',\n            borderColor: 'blue'\n          } // {\n          //   label: 'Vacant',\n          //   // fill: true,\n          //   data: parkingData.map(d => d.vehicles.vacant),\n          //   backgroundColor: 'blue',\n          //   borderColor: 'blue',\n          // },\n          // {\n          //   label: 'Occupied',\n          //   // fill: 'false',\n          //   data: parkingData.map(d => d.vehicles.occupied),\n          //   backgroundColor: 'green',\n          //   borderColor: 'green',\n          // }\n          ]\n        };\n        this.setState({\n          chartData\n        });\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: false\n    };\n  } // componentDidMount() {\n  //   this.graphData();\n  // }\n\n\n  render() {\n    const {\n      showLine,\n      showBar,\n      showPie,\n      chartData,\n      fillFlag\n    } = this.state;\n    console.log(\"chartData=\", chartData);\n    console.log(\"fillFlagOutsideComponentDidMount=\", fillFlag);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, showLine && React.createElement(Line, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), showBar && React.createElement(Bar, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), showPie && React.createElement(Line, {\n      data: chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartContainer;","map":{"version":3,"sources":["/home/praveesh/workspace/parkzeus/src/Components/Charts/ChartContainer/Chart.js"],"names":["React","axios","Line","Bar","ChartContainer","Component","constructor","props","graphType","Chart_type","chartType","setState","showLine","showBar","showPie","fillFlag","graphData","then","response","parkingData","data","state","console","log","chartData","labels","map","k","day","datasets","label","fill","d","vehicles","booked","backgroundColor","borderColor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\n\nclass ChartContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: false\n    }\n  }\n\n\n  // componentDidMount() {\n  //   this.graphData();\n  // }\n\n\n  \ngraphType = ()=>{\n\n  // const fillValue = {showLine ? true : false}\n  const Chart_type = this.props.chartType;\n  // console.log(\"Chart_type in ChartContainer is \",Chart_type);\n  if (Chart_type==='Line'){\n    this.setState({\n      showLine: true,\n      showBar: false,\n      showPie: false,\n      fillFlag: false\n    })\n  }\n  else if(Chart_type==='Bar'){\n      this.setState({\n        showLine: false,\n        showBar: true,\n        showPie: false,\n      })\n  }\n  else if(Chart_type===\"Pie\"){\n      this.setState({\n        showLine: false,\n        showBar: false,\n        showPie: true,\n        fillFlag: true\n      })\n  }\n\n  graphData()\n\n}\n\ngraphData = () =>{\n  axios('https://praveesh91.github.io/test_json/parkingData.json')\n  .then((response) => {\n    const { parkingData } = response.data;\n    // const values = parkingData.map(d => d.vehicles.booked)\n    // const valus = parkingData.map(d => d.day)\n    const {fillFlag} = this.state\n    console.log(\"fillFlagInComponentDidMount=\", fillFlag)\n    const chartData = {\n        labels: parkingData.map(k => k.day),\n        datasets: [\n            {\n            label: 'Booked',\n            fill: fillFlag ? true : false,\n            // fill: true,\n            data: parkingData.map(d => d.vehicles.booked),\n            backgroundColor: 'blue',\n            borderColor: 'blue',\n            },\n            // {\n            //   label: 'Vacant',\n            //   // fill: true,\n            //   data: parkingData.map(d => d.vehicles.vacant),\n            //   backgroundColor: 'blue',\n            //   borderColor: 'blue',\n            // },\n            // {\n            //   label: 'Occupied',\n            //   // fill: 'false',\n            //   data: parkingData.map(d => d.vehicles.occupied),\n            //   backgroundColor: 'green',\n            //   borderColor: 'green',\n            // }\n        ],\n    }\n\n    this.setState({ chartData });\n  });\n}\n\nrender() {\n\n  const {showLine, showBar, showPie,chartData,fillFlag} = this.state;\n  console.log(\"chartData=\",chartData);\n  console.log(\"fillFlagOutsideComponentDidMount=\", fillFlag)\n\n  return (\n  <div>\n      {showLine && <Line data={chartData}/>}\n      {showBar && <Bar data={chartData}/>}\n      {showPie && <Line data={chartData}/>}\n  </div>\n  );\n}\n}\nexport default ChartContainer;\n"]},"metadata":{},"sourceType":"module"}