{"ast":null,"code":"var _jsxFileName = \"/home/praveesh/Desktop/github/parkzeus/src/Components/ParkingSpaceOverview/MapView/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Avatar, CardHeader } from 'google-maps-react';\nimport { Grid, IconButton, Card, CardContent } from '@material-ui/core/';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Popup from './Popup';\nimport VerifiedLabel from '../ParkingOverview/StatusLabel/VerifiedLabel';\nimport axios from 'axios';\nimport './MapContainer.scss';\nimport marker from '../../../Assets/Images/pin.png';\n\nclass MapContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          icon: {\n            url: marker\n          },\n          onClick: this.onMarkerClick,\n          name: 'Current location',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      stores: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://praveesh91.github.io/test_json/mapData.json\").then(response => {\n      const data = response.data.stores;\n      this.setState({\n        stores: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      onClick: this.onMapClicked,\n      zoom: 9,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      m: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"cust-card\",\n      style: {\n        backgroundColor: '#ededed',\n        margin: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      action: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MoreVertIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))),\n      title: e.spaceName,\n      titleTypographyProps: {\n        variant: \"title\",\n        component: \"h4\"\n      },\n      avatar: React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(VerifiedLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"info-container mb-2 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Occupied\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"10\")), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Vacant\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"20\")), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Booked\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, e.status.Occupied)), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Unavailable\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"9\"))))))))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCq1D3cnZycxn5PCwiahpHscgep3yoN35U'\n})(MapContainer); // import React, {Component} from 'react';\n// import GoogleMapReact from \"google-map-react\";\n// import axios from 'axios'\n// import Popup from './Popup'\n// import marker from '../../../Assets/Images/pin.png'\n// const googleAPIKey = \"AIzaSyCq1D3cnZycxn5PCwiahpHscgep3yoN35U\";\n// const markerStyle = {\n//   position: \"absolute\",\n//   top: \"100%\",\n//   left: \"100%\",\n//   cursor: \"pointer\",\n//   transform: \"translate(-50%, -100%)\"\n// };\n// class MapContainer extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             stores: [],\n//             center: {\n//                 lat: 47.2, \n//                 lng: -122 \n//             },\n//             zoom: 9,\n//             showPopup: false\n//         }\n//     }\n//     handleMarkerClick = () =>{\n//         this.setState({  \n//             showPopup: !this.state.showPopup  \n//        });  \n//     }\n//     componentDidMount(){\n//         axios.get(\"https://praveesh91.github.io/test_json/mapData.json\")\n//         .then(response =>{\n//             const data = response.data.stores;\n//             this.setState({\n//                 stores:data\n//             })\n//         })    \n//     }\n//     render() {\n//         const Marker = () => {\n//             return (\n//                 <GoogleMapReact\n//                     bootstrapURLKeys={{ key: googleAPIKey }}\n//                     yesIWantToUseGoogleMapApiInternals={true}\n//                     defaultZoom={this.state.zoom}\n//                     defaultCenter={this.state.center}\n//                 >\n//                     {this.state.stores.map(item => {\n//                         return (\n//                             <div \n//                                 lat={item.latitude} \n//                                 lng={item.longitude} \n//                                 onClick={() => {this.handleMarkerClick()}}>\n//                                 <img style={markerStyle} src={marker} alt=\"pin\" />\n//                             </div>\n//                         );\n//                     })}\n//                 </GoogleMapReact>\n//             );\n//         };\n//         return (\n//             <div style={{ height: '100vh', width: '100%' }}>\n//                 {<Marker />}\n//                 {this.state.showPopup ?  \n//                     <Popup  \n//                         text='Click \"Close Button\" to hide popup'  \n//                         // closePopup={this.togglePopup.bind(this)}  \n//                     />  \n//                     : null  \n//                 }\n//             </div>\n//             );\n//         }\n//     }\n// export default MapContainer;","map":{"version":3,"sources":["/home/praveesh/Desktop/github/parkzeus/src/Components/ParkingSpaceOverview/MapView/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","Avatar","CardHeader","Grid","IconButton","Card","CardContent","MoreVertIcon","Popup","VerifiedLabel","axios","marker","MapContainer","constructor","props","onMarkerClick","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","displayMarkers","stores","map","store","index","lat","latitude","lng","longitude","url","componentDidMount","get","then","response","data","render","google","backgroundColor","margin","spaceName","variant","component","status","Occupied","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Avatar, CardHeader } from 'google-maps-react';\nimport {Grid, IconButton, Card, CardContent} from '@material-ui/core/';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Popup from './Popup'\nimport VerifiedLabel from '../ParkingOverview/StatusLabel/VerifiedLabel';\nimport axios from 'axios'\nimport './MapContainer.scss'\nimport marker from '../../../Assets/Images/pin.png'\n\nclass MapContainer extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            stores: [],\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}, \n        }\n    }\n    componentDidMount(){\n        axios.get(\"https://praveesh91.github.io/test_json/mapData.json\")\n        .then(response =>{\n            const data = response.data.stores;\n            this.setState({\n                stores:data\n            })\n        })\n        \n    }\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n        });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n        this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n        })\n        }\n    };\n\n    displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker \n            key={index} \n            id={index} \n            position={{\n                lat: store.latitude,\n                lng: store.longitude\n            }}\n            icon={{\n                url: marker,\n              }}\n              onClick={this.onMarkerClick}\n              name={'Current location'} />\n        })\n      }\n\nrender() {\n    return (\n        <div className='mapContainer'>\n            <Map\n                google={this.props.google}\n                onClick={this.onMapClicked}\n                zoom={9}\n                initialCenter={{ lat: 47.444, lng: -122.176}}>\n                {this.displayMarkers()}\n\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}>\n                    <Grid container>\n                        {/* <Grid item xs={6}>\n                            <p>IBM Corporate Space</p>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <IconButton><MoreVertIcon /></IconButton>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <VerifiedLabel />    \n                        </Grid>\n                        <Grid item xs={6}>Space</Grid>\n                        <Grid item xs={6}>Occupied</Grid> */}\n <Grid item xs={6} m={2}>\n                        <Card className=\"cust-card\" style={{backgroundColor:'#ededed', margin:\"5px\"}}>\n                        <CardHeader\n                            action={\n                                <div>\n                                    <IconButton><MoreVertIcon /></IconButton>\n                                </div>\n                            }\n                            title={e.spaceName}\n                            titleTypographyProps={{ variant:\"title\", component:\"h4\" }}\n                            avatar={\n                                <Avatar>\n                                  {/* <img src={live} alt=\"add people\" /> */}\n                                </Avatar>\n                              }\n                            />\n                            \n                            <CardContent>\n                            <VerifiedLabel/>\n                            {/* <img className=\"verified-image\" src={verified} alt=\"label\" /> */}\n                            <div className=\"info-container mb-2 mt-2\">\n                                <div className=\"status\">\n                                    <b>Occupied</b>\n                                    <p>10</p>\n                                </div>\n                                <div className=\"status\">\n                                    <b>Vacant</b>\n                                    <p>20</p>\n                                </div>\n                                <div className=\"status\">\n                                    <b>Booked</b>\n                                    <p>{e.status.Occupied}</p>\n                                </div>\n                                <div className=\"status\">\n                                    <b>Unavailable</b>\n                                    <p>9</p>\n                                </div>\n                            </div>\n                            </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </InfoWindow>\n\n            </Map>\n            \n        </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCq1D3cnZycxn5PCwiahpHscgep3yoN35U'\n})(MapContainer);\n\n\n// import React, {Component} from 'react';\n// import GoogleMapReact from \"google-map-react\";\n// import axios from 'axios'\n\n// import Popup from './Popup'\n\n// import marker from '../../../Assets/Images/pin.png'\n\n// const googleAPIKey = \"AIzaSyCq1D3cnZycxn5PCwiahpHscgep3yoN35U\";\n\n// const markerStyle = {\n//   position: \"absolute\",\n//   top: \"100%\",\n//   left: \"100%\",\n//   cursor: \"pointer\",\n//   transform: \"translate(-50%, -100%)\"\n// };\n\n// class MapContainer extends Component {\n\n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n//             stores: [],\n//             center: {\n//                 lat: 47.2, \n//                 lng: -122 \n//             },\n//             zoom: 9,\n//             showPopup: false\n//         }\n//     }\n\n//     handleMarkerClick = () =>{\n//         this.setState({  \n//             showPopup: !this.state.showPopup  \n//        });  \n//     }\n\n//     componentDidMount(){\n//         axios.get(\"https://praveesh91.github.io/test_json/mapData.json\")\n//         .then(response =>{\n//             const data = response.data.stores;\n//             this.setState({\n//                 stores:data\n//             })\n//         })    \n//     }\n\n//     render() {\n\n//         const Marker = () => {\n\n//             return (\n//                 <GoogleMapReact\n//                     bootstrapURLKeys={{ key: googleAPIKey }}\n//                     yesIWantToUseGoogleMapApiInternals={true}\n//                     defaultZoom={this.state.zoom}\n//                     defaultCenter={this.state.center}\n//                 >\n//                     {this.state.stores.map(item => {\n//                         return (\n//                             <div \n//                                 lat={item.latitude} \n//                                 lng={item.longitude} \n//                                 onClick={() => {this.handleMarkerClick()}}>\n//                                 <img style={markerStyle} src={marker} alt=\"pin\" />\n//                             </div>\n//                         );\n//                     })}\n//                 </GoogleMapReact>\n//             );\n//         };\n  \n\n//         return (\n//             <div style={{ height: '100vh', width: '100%' }}>\n//                 {<Marker />}\n//                 {this.state.showPopup ?  \n//                     <Popup  \n//                         text='Click \"Close Button\" to hide popup'  \n//                         // closePopup={this.togglePopup.bind(this)}  \n//                     />  \n//                     : null  \n//                 }\n                \n//             </div>\n//             );\n//         }\n//     }\n\n// export default MapContainer;"]},"metadata":{},"sourceType":"module"}